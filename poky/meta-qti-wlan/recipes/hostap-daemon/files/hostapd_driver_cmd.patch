diff --git a/hostapd/Android.mk b/hostapd/Android.mk
index 46d1bc5..0111302 100644
--- a/hostapd/Android.mk
+++ b/hostapd/Android.mk
@@ -1079,6 +1079,10 @@ ifdef CONFIG_ANDROID_LOG
 L_CFLAGS += -DCONFIG_ANDROID_LOG
 endif
 
+ifdef CONFIG_LINUX_EMBEDDED
+L_CFLAGS += -DLINUX_EMBEDDED
+endif
+
 OBJS_c = hostapd_cli.c
 OBJS_c += src/common/wpa_ctrl.c
 OBJS_c += src/utils/os_$(CONFIG_OS).c
diff --git a/hostapd/Makefile b/hostapd/Makefile
index 98ce115..f8b1142 100644
--- a/hostapd/Makefile
+++ b/hostapd/Makefile
@@ -173,6 +173,10 @@ LIBS_h += -lgcov
 LIBS_n += -lgcov
 endif
 
+ifdef CONFIG_LINUX_EMBEDDED
+CFLAGS += -DLINUX_EMBEDDED
+endif
+
 ifndef CONFIG_NO_DUMP_STATE
 # define HOSTAPD_DUMP_STATE to include support for dumping internal state
 # through control interface commands (undefine it, if you want to save in
@@ -1208,6 +1212,10 @@ LIBS += -lsqlite3
 LIBS_h += -lsqlite3
 endif
 
+ifdef CONFIG_LINUX_EMBEDDED
+LIBS += -lwpa_supplicant_8_lib
+endif
+
 ifdef CONFIG_FST
 CFLAGS += -DCONFIG_FST
 OBJS += ../src/fst/fst.o
diff --git a/hostapd/android.config b/hostapd/android.config
index eef9281..00b840b 100644
--- a/hostapd/android.config
+++ b/hostapd/android.config
@@ -145,6 +145,9 @@ CONFIG_IEEE80211AC=y
 # Add support for writing debug log to Android logcat instead of standard output
 CONFIG_ANDROID_LOG=y
 
+# LE platform build with wpa_cli "driver" command
+#CONFIG_LINUX_EMBEDDED=y
+
 # Remove support for RADIUS accounting
 #CONFIG_NO_ACCOUNTING=y
 
diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index e8b1810..8765df6 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -2770,6 +2770,21 @@ static int hostapd_ctrl_iface_acl_add_mac(struct mac_acl_entry **acl, int *num,
 	return ret < 0 ? -1 : 0;
 }
 
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
+static int hostapd_driver_cmd(struct hostapd_data *hapd, char *cmd,
+				     char *buf, size_t buflen)
+{
+	int ret;
+
+	ret = hostapd_drv_driver_cmd(hapd, cmd, buf, buflen);
+
+	if (ret == 0) {
+		ret = os_snprintf(buf, buflen, "%s\n", "OK");
+	}
+	return ret;
+}
+#endif /* ANDROID || LINUX_EMBEDDED */
+
 
 static int hostapd_ctrl_iface_receive_process(struct hostapd_data *hapd,
 					      char *buf, char *reply,
@@ -2866,6 +2881,11 @@ static int hostapd_ctrl_iface_receive_process(struct hostapd_data *hapd,
 	} else if (os_strncmp(buf, "POLL_STA ", 9) == 0) {
 		if (hostapd_ctrl_iface_poll_sta(hapd, buf + 9))
 			reply_len = -1;
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
+	} else if (os_strncmp(buf, "DRIVER ", 7) == 0) {
+		reply_len = hostapd_driver_cmd(hapd, buf + 7, reply,
+						      reply_size);
+#endif /* ANDROID || LINUX_EMBEDDED */
 	} else if (os_strcmp(buf, "STOP_AP") == 0) {
 		if (hostapd_ctrl_iface_stop_ap(hapd))
 			reply_len = -1;
diff --git a/hostapd/hostapd_cli.c b/hostapd/hostapd_cli.c
index fbec5d2..4cd1735 100644
--- a/hostapd/hostapd_cli.c
+++ b/hostapd/hostapd_cli.c
@@ -1479,6 +1479,13 @@ static int hostapd_cli_cmd_poll_sta(struct wpa_ctrl *ctrl, int argc,
 	return hostapd_cli_cmd(ctrl, "POLL_STA", 1, argc, argv);
 }
 
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
+static int hostapd_cli_cmd_driver(struct wpa_ctrl *ctrl, int argc,
+				    char *argv[])
+{
+	return hostapd_cli_cmd(ctrl, "DRIVER", 1, argc, argv);
+}
+#endif /* ANDROID || LINUX_EMBEDDED */
 
 struct hostapd_cli_cmd {
 	const char *cmd;
@@ -1651,6 +1658,10 @@ static const struct hostapd_cli_cmd hostapd_cli_commands[] = {
 	  "=Add/Delete/Show/Clear deny MAC ACL" },
 	{ "poll_sta", hostapd_cli_cmd_poll_sta, hostapd_complete_stations,
 	  "<addr> = poll a STA to check connectivity with a QoS null frame" },
+#if defined (ANDROID) || defined (LINUX_EMBEDDED)
+ 	{ "driver", hostapd_cli_cmd_driver, NULL,
+ 	  "<command> = driver private commands" },
+#endif /* ANDROID || LINUX_EMBEDDED */
 	{ NULL, NULL, NULL, NULL }
 };
 
diff --git a/src/ap/ap_drv_ops.h b/src/ap/ap_drv_ops.h
index db93fde..a44f19b 100644
--- a/src/ap/ap_drv_ops.h
+++ b/src/ap/ap_drv_ops.h
@@ -254,6 +254,16 @@ static inline void hostapd_drv_poll_client(struct hostapd_data *hapd,
 	hapd->driver->poll_client(hapd->drv_priv, own_addr, addr, qos);
 }
 
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
+static inline int hostapd_drv_driver_cmd(struct hostapd_data *hapd,
+				     char *cmd, char *buf, size_t buf_len)
+{
+	if (!hapd->driver->driver_cmd)
+		return -1;
+	return hapd->driver->driver_cmd(hapd->drv_priv, cmd, buf, buf_len);
+}
+#endif /* ANDROID || LINUX_EMBEDDED */
+
 static inline int hostapd_drv_get_survey(struct hostapd_data *hapd,
 					 unsigned int freq)
 {
diff --git a/src/drivers/driver.h b/src/drivers/driver.h
index f05f05c..f859185 100644
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -3366,7 +3366,7 @@ struct wpa_driver_ops {
 	 */
 	int (*set_authmode)(void *priv, int authmode);
 
-#ifdef ANDROID
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
 	/**
 	 * driver_cmd - Execute driver-specific command
 	 * @priv: Private driver interface data
@@ -3376,7 +3376,7 @@ struct wpa_driver_ops {
 	 * Returns: 0 on success, -1 on failure
 	 */
 	int (*driver_cmd)(void *priv, char *cmd, char *buf, size_t buf_len);
-#endif /* ANDROID */
+#endif /* ANDROID || LINUX_EMBEDDED */
 
 	/**
 	 * vendor_cmd - Execute vendor specific command
diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index c689b2f..aa1464f 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -10629,11 +10629,11 @@ const struct wpa_driver_ops wpa_driver_nl80211_ops = {
 	.get_noa = wpa_driver_get_p2p_noa,
 	.set_ap_wps_ie = wpa_driver_set_ap_wps_p2p_ie,
 #endif /* ANDROID_P2P */
-#ifdef ANDROID
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
 #ifndef ANDROID_LIB_STUB
 	.driver_cmd = wpa_driver_nl80211_driver_cmd,
 #endif /* !ANDROID_LIB_STUB */
-#endif /* ANDROID */
+#endif /* ANDROID || LINUX_EMBEDDED */
 	.vendor_cmd = nl80211_vendor_cmd,
 	.set_qos_map = nl80211_set_qos_map,
 	.set_wowlan = nl80211_set_wowlan,
diff --git a/src/drivers/driver_nl80211.h b/src/drivers/driver_nl80211.h
index 4bdeaa0..6d1bbd8 100644
--- a/src/drivers/driver_nl80211.h
+++ b/src/drivers/driver_nl80211.h
@@ -269,13 +269,16 @@ int process_bss_event(struct nl_msg *msg, void *arg);
 
 const char * nl80211_iftype_str(enum nl80211_iftype mode);
 
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
+extern int wpa_driver_nl80211_driver_cmd(void *priv, char *cmd, char *buf,
+					 size_t buf_len);
+#endif /* ANDROID || LINUX_EMBEDDED */
+
 #ifdef ANDROID
 int android_nl_socket_set_nonblocking(struct nl_handle *handle);
 int android_pno_start(struct i802_bss *bss,
 		      struct wpa_driver_scan_params *params);
 int android_pno_stop(struct i802_bss *bss);
-extern int wpa_driver_nl80211_driver_cmd(void *priv, char *cmd, char *buf,
-					 size_t buf_len);
 
 #ifdef ANDROID_P2P
 int wpa_driver_set_p2p_noa(void *priv, u8 count, int start, int duration);
